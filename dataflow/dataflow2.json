{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Excel1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Output3",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "AzureDataLakeStorage1",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "filter2"
				},
				{
					"name": "select1"
				},
				{
					"name": "pivot1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string,",
				"          Column_7 as string,",
				"          Column_8 as string,",
				"          Column_9 as string,",
				"          Column_10 as string,",
				"          Column_11 as string,",
				"          Column_12 as string,",
				"          Column_13 as string,",
				"          Column_14 as string,",
				"          {1} as string,",
				"          {2} as string,",
				"          {3} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 filter(((greater(Column_1, '2017') && (notEquals(Column_1,'Mes') && notEquals(Column_1,'Acumulado')))  && notEquals(Column_1, 'Diferencia aÃ±o anterior')) && notEquals(Column_1, 'Mensual')) ~> filter2",
				"filter2 select(mapColumn(",
				"          Column_1,",
				"          Column_2,",
				"          Column_3,",
				"          Column_4,",
				"          Column_5,",
				"          Column_6,",
				"          Column_7,",
				"          Column_8,",
				"          Column_9,",
				"          Column_10,",
				"          Column_11,",
				"          Column_12,",
				"          Column_13",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 pivot(groupBy(Column_1,",
				"          Column_2),",
				"     pivotBy(Column_2),",
				"     {} = sum(toFloat(Column_1)),",
				"     columnNaming: '$N$V',",
				"     lateral: false) ~> pivot1",
				"pivot1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column1 as string,",
				"          Column2 as string,",
				"          Column3 as string,",
				"          Column4 as string,",
				"          Column5 as string,",
				"          Column6 as string,",
				"          Column7 as string,",
				"          Column8 as string,",
				"          Column9 as string,",
				"          Column10 as string,",
				"          Column11 as string,",
				"          Column12 as string,",
				"          Column13 as string,",
				"          Column14 as string,",
				"          Column15 as string,",
				"          Column16 as string,",
				"          Column17 as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}